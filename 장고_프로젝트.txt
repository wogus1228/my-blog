# 가상환경 생성
python -m venv myvenv
(설치경로)

# 가상환경 활성화
myvenv\Scripts\activate

# 가상환경 비활성화
deactivate

# pip 최신 업데이트
python -m pip install --upgrade pip

# 장고 설치
pip install django

# 장고 프로젝트 생성
django-admin.py startproject mysite .
                                     (플젝명) .은 해당경로

# 설정변경(settings.py)
1. 언어
   LANGUAGE_CODE = 'ko'
2. 시간대
   TIME_ZONE = 'Asia/Seoul'
3. 정적파일 경로 추가
   STATIC_ROOT = os.path.join(BASE_DIR, 'static')
4. pythonanywhere를 사용하기 위한 설정 추가
   ALLOWED_HOSTS = ['127.0.0.1', '.pythonanywhere.com']

# 데이터베이스 생성
python manage.py migrate

# 장고 서버 실행
python manage.py runserver

# 어플리케이션 만들기
python manage.py startapp blog

# 설정변경(settings.py)
INSTALLED_APPS = ['blog'] 추가

# db에 생성할 모델 생성
python manage.py makemigrations blog

# db에 모델 반영
python manage.py migrate blog

# 관리자 화면에 모델 추가(admin.py)
from .models import Post

admin.site.register(Post)

# 관리자계정 생성
python manage.py createsuperuser

# 깃 접속 및 설정
git init

git config --global user.name ""
git config --global user.email ""

# 변경사항 저장
git add --all .

git commit -m ""

# 변경사항 push
git remote add origin https://github.com/<your-github-username>/my-first-blog.git(초기에 git 연결 시)

git push -u origin master

※ 여기서 깃허브 레지토리 생성할때 readme.md를 생성했을 시 오류가 발생한다고 한다.
   => git pull origin master 
   보통 위 명령어로 해결이 되나, 데이터 유실 등의 문제로 git에서 에러를 발생시키는 경우가 있음
   => git push-u origin +master
   강제로 push 진행
   참고 url : https://velog.io/@tk_kim/TIL-DAY-11-Igonoring-Django-Secret-Key-with-.gitignore
              https://doozi316.github.io/errorlog/2019/09/30/error1/

# url
  project urls.py -> app urls.py -> views.py

# templates 경로
  myapp/templates/myapp/*.html